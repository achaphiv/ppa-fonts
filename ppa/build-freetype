#!/bin/bash

set -ex

dist=$1
version=$2
version_suffix=$3

package=freetype

starting_dir=$(pwd)
build_dir=${starting_dir}/build-${package}-${dist}
working_dir=${build_dir}/${package}-${version}

main() {
  fix_patches
  update_changelog
  generate_package_from_ppa_archive || generate_package_from_ubuntu_archive || generate_package_from_official_archive
  upload_package_to_ppa
  cd ${starting_dir}
}

fix_patches() {
  cd ${working_dir}

  add_patch() {
    local patch_name=$1
    cp ${starting_dir}/patches-freetype/$patch_name debian/patches-freetype/
    echo $patch_name >> debian/patches-freetype/series
  }

  add_patch enable_v38.patch
}

update_changelog() {
  cd ${working_dir}
  changelog=$(mktemp)

  cat <<EOF | sed 's/^  //' > ${changelog}
  ${package} (${version}${version_suffix}) ${dist}; urgency=low

    * Enable interpreter v38 (infinality)

   -- ${DEBFULLNAME} <${DEBEMAIL}>  $(date -R)

EOF
  cat debian/changelog >> ${changelog}
  mv ${changelog} debian/changelog
}

generate_package_from_url() {
  local url=$1

  cd ${build_dir}
  wget $url || return 1
  tar xvzfp freetype_${version}.orig.tar.gz
  cd ${working_dir}
  debuild -S -sd -pgpg2
}

generate_package_from_ubuntu_archive() {
  generate_package_from_url http://archive.ubuntu.com/ubuntu/pool/main/f/freetype/freetype_${version}.orig.tar.gz
}

generate_package_from_ppa_archive() {
  generate_package_from_url https://launchpad.net/~no1wantdthisname/+archive/ubuntu/ppa/+files/freetype_${version}.orig.tar.gz
}

generate_package_from_official_archive() {
  cd ${working_dir}
  gpg --recv-keys E707FDA5
  ./debian/rules get-orig-source
  tar xvzfp *.orig.tar.gz --strip-components=1
  mv *.orig.tar.gz ..
  debuild -S -sa -pgpg2
}

upload_package_to_ppa() {
  dput -c ${starting_dir}/dput.cf ppa ${build_dir}/*changes
}

main
